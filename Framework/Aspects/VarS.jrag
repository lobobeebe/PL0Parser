import java.util.Set;
import Utility.SetRepUtility;
import AST.*;

//=========================================================================**
// VarS attribute
//=========================================================================**

aspect VarS
{
    //=========================================================================**
    // inFlows()
    //=========================================================================**

    eq VarS.getLabeledRef().inFlows() = inFlows();

    //=========================================================================**
    // init()
    //=========================================================================**

    eq  VarS.init() = getLabeledRef().getLabel();

    //=========================================================================**
    // blocks()
    //=========================================================================**

    eq VarS.blocks() = SetRepUtility.singleton(getLabeledRef().getLabel());

    //=========================================================================**
    // finals()
    //=========================================================================**

    syn Set<Label> VarS.finals();
    eq VarS.finals() = SetRepUtility.singleton(getLabeledRef().getLabel());

    //=========================================================================**
    // outFlows()
    //=========================================================================**

    eq VarS.getLabeledRef().outFlows() = outFlows();

    //=========================================================================**
    // unparse()
    //=========================================================================**

    eq VarS.getLabeledRef().unparse()
    {
        return "[" + getLabeledRef().getVar() + "]^" + getLabeledRef().getLabel();
    }

    eq VarS.unparse()
    {
        return getLabeledRef().unparse();
    }
}
