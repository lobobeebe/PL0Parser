import java.util.Set;
import Utility.Pair;
import Utility.SetRepUtility;
import AST.*;

aspect ProcS
{
    //=========================================================================**
    // Vars()
    //=========================================================================**

    syn Set<String> ProcS.Vars();
    eq ProcS.Vars() = getBlock().Vars();

    //=========================================================================**
    // inFlows()
    //=========================================================================**

    inh Set<Label> ProcS.inFlows();
    eq ProcS.getLabeledRef().inFlows() = inFlows();

    //=========================================================================**
    // init()
    //=========================================================================**

    eq ProcS.init() = getLabeledRef().getLabel();

    //=========================================================================**
    // blocks()
    //=========================================================================**

    eq ProcS.blocks() = SetRepUtility.singleton(getLabeledRef().getLabel());

    //=========================================================================**
    // next()
    //=========================================================================**

    eq ProcS.getBlock().next() = next();

    //=========================================================================**
    // finals()
    //=========================================================================**

    syn Set<Label> ProcS.finals();
    eq ProcS.finals() = SetRepUtility.singleton(getLabeledRef().getLabel());
}
