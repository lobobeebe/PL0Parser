import java.util.*;
import Utility.SetRepUtility;
import Utility.FlowGraph;

//=========================================================================**
// BeginEndS aspect
//=========================================================================**

aspect BeginEndS
{
    //=========================================================================**
    // progInitLabel()
    //=========================================================================**

    eq BeginEndS.getS(int index).progInitLabel() = progInitLabel();

    //=========================================================================**
    // inFlows()
    //=========================================================================**

    eq BeginEndS.getS(int index).inFlows()
    {
        if(index == 0)
        {
            return inFlows();
        }

        return getS(index - 1).finals();
    }

    //=========================================================================**
    // init()
    //=========================================================================**

    eq BeginEndS.init() = getS(0).init();

    //=========================================================================**
    // blocks()
    //=========================================================================**

    eq BeginEndS.blocks()
    {
        Set<ElementaryBlock> ret = SetRepUtility.emptySet();
        for(int i = 0; i < getNumS(); i++)
        {
            ret.addAll(getS(i).blocks());
        }
        return ret;
    }

    //=========================================================================**
    // next()
    //=========================================================================**

    eq BeginEndS.getS(int index).next()
    {
        if(index == getNumS() - 1)
        {
            return next();
        }
        else
        {
            return getS(index+1);
        }
    }

    //=========================================================================**
    // finals()
    //=========================================================================**

    eq BeginEndS.finals() = getS(getNumS() - 1).finals();

    //=========================================================================**
    // unparse()
    //=========================================================================**

    eq BeginEndS.unparse()
    {
        StringBuffer buffer = new StringBuffer();
        buffer.append("begin\n");
        int len = getNumS();
        for (int i = 0; i < len; i++)
        {
            buffer.append(getS(i).unparse());
            if (i < len-1)
            {
                buffer.append(";\n");
            }
        }
        buffer.append("\nend");
        return buffer.toString();
    }
}
