import java.util.*;
import Utility.SetRepUtility;
import Utility.FlowGraph;

//=========================================================================**
// CallS aspect
//=========================================================================**

aspect CallS
{
    CallS implements ElementaryBlock;

    //=========================================================================**
    // inFlows()
    //=========================================================================**

    //=========================================================================**
    // init()
    //=========================================================================**

    eq CallS.init() = getLabel();

    //=========================================================================**
    // blocks()
    //=========================================================================**

    eq CallS.blocks()
    {
        Set<ElementaryBlock> ret = SetRepUtility.emptySet();
        for(ProcS proc : ProcStar())
        {
            if(proc.getName().equals(getProcName()))
            {
                ret.addAll(proc.getBlock().blocks());
            }
        }
        ret.add(this);
        return ret;
    }

    //=========================================================================**
    // next()
    //=========================================================================**

    //=========================================================================**
    // finals()
    //=========================================================================**

    eq CallS.finals()
    {
        Set<Label> ret = SetRepUtility.emptySet();

        for(ProcS proc : ProcStar())
        {
            if(proc.getName().equals(getProcName()))
            {
                ret = proc.getBlock().finals();
            }
        }
        return ret;
    }

    //=========================================================================**
    // outFlows()
    //=========================================================================**

}
