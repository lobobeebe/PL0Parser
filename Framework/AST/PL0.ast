// Program
Program ::= Block;

// Block
Block ::= Constant:ConstDecl* Var:VarDecl* Proc:Procedure* S;

//Decls
ConstDecl ::= LabelAST:Label <Var> <Num>;
VarDecl ::= LabelAST:Label <Var>;
ProcDecl ::= LabelAST:Label <Var> Block;

// Operations
abstract Op ::= <Contents>;

Op_r:Op;
Op_a:Op;

// Expressions
abstract AExpr;
abstract BExpr;

VarRefExpr:AExpr ::= <Contents>;
NumLitExpr:AExpr ::= <Contents>;
ABinaryExpr:AExpr ::= Left:AExpr Op:Op_a Right:AExpr;
OddExpr:BExpr ::= AExpr;

BBinaryExpr:BExpr ::=  LabelAST:Label Left:AExpr Op:Op_r Right:AExpr;


// Statements
abstract S;

CallS:S ::= LabelAST:Label <Var>;
BeginEndS:S ::= Statement:S*;

AssignS:S ::= LabelAST:Label <Var> AExpr;
IfS:S ::= RelExpr S;
WhileS:S ::= RelExpr S;

abstract Label;
NumLabel : Label ::= <Num>;
