// Program
Program ::= Block;

// Block
Block ::= Constant:ConstDecl* Var:VarDecl* Proc:Procedure* S;

// Declarations
abstract Decl;

ConstDecl: Decl ::= LabelAST:Label <Var> <Num>;
VarDecl: Decl ::= LabelAST:Label <Var>;

// Procedure
Procedure: Decl ::= LabelAST:Label <Var> Block;

// Operations
abstract Op ::= <Contents>;

Op_r : Op;
Op_a : Op;

// Expressions
abstract Expr;

VarRefExpr: Expr ::= <Contents>;
NumLitExpr: Expr ::= <Contents>;
ABinaryExpr: Expr ::= Left:Expr Op:Op_a Right:Expr;
OddExpr: Expr ::= Expr;
RelExpr: Expr ::= Left:Expr Op:Op_r Right:Expr;

LabeledExpr: Expr ::= LabelAST:Label Expr;


// Statements
abstract S;

CallS:S ::= LabelAST:Label <Var>;
BeginEndS:S ::= Statement:S*;

AssignS:S ::= LabelAST:Label <Var> Expr;
IfS:S ::= Condition:LabeledExpr S;
WhileS:S ::= Condition:LabeledExpr S;

abstract Label;
NumLabel:Label ::= <Num>;
