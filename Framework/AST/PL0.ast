// Program
Program ::= Block;

// Block
Block ::= Constant:ConstDecl* Var:VarDecl* Proc:Procedure* S;


ConstDecl ::= LabelAST:Label <Var> <Num>;
VarDecl ::= LabelAST:Label <Var>;

// Procedure
Procedure ::= LabelAST:Label <Var> Block;

// Operations
abstract Op ::= <Contents>;

Op_r : Op;
Op_a : Op;

// Expressions
abstract Expr;
abstract AExpr;

VarRefExpr: AExpr ::= <Contents>;
NumLitExpr: AExpr ::= <Contents>;
ABinaryExpr: AExpr ::= Left:AExpr Op:Op_a Right:AExpr;
OddExpr: AExpr ::= AExpr;

RelExpr: Expr ::= Left:Expr Op:Op_r Right:Expr;
LabeledExpr: RelExpr ::= LabelAST:Label Expr;


// Statements
abstract S;

CallS:S ::= LabelAST:Label <Var>;
BeginEndS:S ::= Statement:S*;

AssignS:S ::= LabelAST:Label <Var> Expr;
IfS:S ::= LabeledExpr S;
WhileS:S ::= LabeledExpr S;

abstract Label;
NumLabel:Label ::= <Num>;
