// Program
Program ::= Block;

// Block
Block ::= Constant:ConstDecl* Var:VarDecl* Proc:Procedure* S;

//Decls
ConstDecl ::= Label <Var> <Num>;
VarDecl ::= Label <Var>;
ProcDecl ::= Label <Var> Block;

// Operations
abstract Op ::= <Contents>;
Op_r:Op;
Op_a:Op;

// Expressions
abstract AExpr;
VarRefExpr:AExpr ::= <Contents>;
NumLitExpr:AExpr ::= <Contents>;
ABinaryExpr:AExpr ::= Left:AExpr Op:Op_a Right:AExpr;

abstract BExpr;
OddExpr:BExpr ::= AExpr;
BBinaryExpr:BExpr ::= Left:AExpr Op:Op_r Right:AExpr;

LabeledExpr:BExpr ::= Label BExpr;

// Statements
abstract S;
CallS:S ::= Label <Var>;
BeginEndS:S ::= Statement:S*;
AssignS:S ::= Label <Var> AExpr;
IfS:S ::= LabeledExpr S;
WhileS:S ::= LabeledExpr S;

// Labels
abstract Label;
NumLabel:Label ::= <Num>;
