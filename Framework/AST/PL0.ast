// Program
Program ::= ProgramBlock;

// ProgramBlock
ProgramBlock ::= Const* Var* Proc* S;

// Declarations
abstract Decl ::= LabeledRef;
Const:Decl ::= <Num>;
Var:Decl;
Proc:Decl ::= Block:ProgramBlock;

// Operations
abstract Op ::= <Contents>;
Op_r:Op;
Op_a:Op;

// Expressions
abstract AExpr;
VarRefExpr:AExpr ::= <Contents>;
NumLitExpr:AExpr ::= <Contents>;
ABinaryExpr:AExpr ::= Left:AExpr Op:Op_a Right:AExpr;

abstract BExpr;
OddExpr:BExpr ::= AExpr;
BBinaryExpr:BExpr ::= Left:AExpr Op:Op_r Right:AExpr;

LabeledRef ::= Label <Var>;
LabeledExpr:BExpr ::= Label;

// Statements
abstract S;
CallS:S ::= LabeledRef;
BeginEndS:S ::= Statement:S*;
AssignS:S ::= LabeledRef AExpr;
IfS:S ::= LabeledExpr S;
WhileS:S ::= LabeledExpr S;

// Labels
abstract Label;
NumLabel:Label ::= <Num>;
